// Code generated by entc, DO NOT EDIT.

package form

const (
	// Label holds the string label denoting the form type in the database.
	Label = "form"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldNom holds the string denoting the nom field in the database.
	FieldNom = "nom"
	// FieldPrenom holds the string denoting the prenom field in the database.
	FieldPrenom = "prenom"
	// FieldAnniversaire holds the string denoting the anniversaire field in the database.
	FieldAnniversaire = "anniversaire"
	// FieldNationalite holds the string denoting the nationalite field in the database.
	FieldNationalite = "nationalite"
	// FieldSexe holds the string denoting the sexe field in the database.
	FieldSexe = "sexe"
	// FieldNiveau holds the string denoting the niveau field in the database.
	FieldNiveau = "niveau"
	// FieldFFT holds the string denoting the fft field in the database.
	FieldFFT = "fft"
	// FieldLocationR holds the string denoting the locationr field in the database.
	FieldLocationR = "locationr"
	// FieldRepas holds the string denoting the repas field in the database.
	FieldRepas = "repas"
	// FieldFormule holds the string denoting the formule field in the database.
	FieldFormule = "formule"
	// FieldSemaine holds the string denoting the semaine field in the database.
	FieldSemaine = "semaine"

	// EdgeContactParents holds the string denoting the contactparents edge name in mutations.
	EdgeContactParents = "contactParents"

	// Table holds the table name of the form in the database.
	Table = "forms"
	// ContactParentsTable is the table the holds the contactParents relation/edge.
	ContactParentsTable = "forms"
	// ContactParentsInverseTable is the table name for the ContactParents entity.
	// It exists in this package in order to avoid circular dependency with the "contactparents" package.
	ContactParentsInverseTable = "contact_parents"
	// ContactParentsColumn is the table column denoting the contactParents relation/edge.
	ContactParentsColumn = "form_contact_parents"
)

// Columns holds all SQL columns for form fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldNom,
	FieldPrenom,
	FieldAnniversaire,
	FieldNationalite,
	FieldSexe,
	FieldNiveau,
	FieldFFT,
	FieldLocationR,
	FieldRepas,
	FieldFormule,
	FieldSemaine,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Form type.
var ForeignKeys = []string{
	"form_contact_parents",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)
